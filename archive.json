{
  "magic": "E!vIA5L86J2I",
  "timestamp": "2025-03-16T00:06:07.103405+00:00",
  "repo": "yoavweiss/httponly_prefix",
  "labels": [
    {
      "name": "bug",
      "description": "Something isn't working",
      "color": "d73a4a"
    },
    {
      "name": "documentation",
      "description": "Improvements or additions to documentation",
      "color": "0075ca"
    },
    {
      "name": "duplicate",
      "description": "This issue or pull request already exists",
      "color": "cfd3d7"
    },
    {
      "name": "enhancement",
      "description": "New feature or request",
      "color": "a2eeef"
    },
    {
      "name": "good first issue",
      "description": "Good for newcomers",
      "color": "7057ff"
    },
    {
      "name": "help wanted",
      "description": "Extra attention is needed",
      "color": "008672"
    },
    {
      "name": "invalid",
      "description": "This doesn't seem right",
      "color": "e4e669"
    },
    {
      "name": "question",
      "description": "Further information is requested",
      "color": "d876e3"
    },
    {
      "name": "wontfix",
      "description": "This will not be worked on",
      "color": "ffffff"
    }
  ],
  "issues": [
    {
      "number": 2,
      "id": "I_kwDON-hv0s6rkqYb",
      "title": "Naming proposal `__Session`",
      "url": "https://github.com/yoavweiss/httponly_prefix/issues/2",
      "state": "OPEN",
      "author": "Jxck",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "I strongly agree with this proposal. Since I'm wondering why `__Host-` prefix lacks of `HttpOnly`.\nIn general, Session Cookie should have\n\n1. Secure\n1. Path=/\n1. no Domain\n1. HttpOnly\n\nBut last option doesn't covered by `__Host` so I need to add `HttpOnly` too.\n\n```\nSet-Cookie: __Host-session_id=xxxxxxxxxxxxxx; HttpOnly; Max-Age=${maxage}\n```\n\nSo your suggestion for `__HttpOnlyHost` is `__Session` for me.\n\n```\nSet-Cookie: __Session-id=xxxxxxxxxxxxxxx; Max-Age=${maxage}\n```\n\nAnd it explicitly shows it's Cookie for Session Management.\nSo I'd love to propose alternative naming for your proposal.\nThanks.\n",
      "createdAt": "2025-02-25T14:08:30Z",
      "updatedAt": "2025-02-27T01:08:22Z",
      "closedAt": null,
      "comments": [
        {
          "author": "dveditz",
          "authorAssociation": "NONE",
          "body": "Although the term doesn't appear in the cookie spec, most implementors who work with the spec use the term \"session cookie\" to refer to a cookie without a max-age/expires, that the spec says will be retained \n> until \"the current session is over\" (as defined by the user agent).\n\nThe spec has many references to \"session identifier\" as a specific use for the data in a cookie which seems to match the concept you're talking about. Most of the time it wouldn't matter which term you use\u2014people will understand what you meant from the context. The specific context here, however, is \"updating the cookie spec\" and it would be better to be consistent with the \"session identified\" term already used in the spec.\n\nFWIW, many web applications have a domain attribute in their session identifier cookies and could not use a __Host- cookie for that without rewriting their app. We have so far used prefixes related to the cookie attributes, not to a particular use someone might have for it. \"__Session-\" doesn't work for me as a prefix for that reason. If anything I would expect it to mean \"a cookie that lasts until the current (user agent) session is over\" -- that is, one without a max-age which is clearly not what you want.\n\n> Set-Cookie: __Host-session_id=xxxxxxxxxxxxxx; HttpOnly; Max-Age=${maxage}\n\nThis is an INVALID cookie. Cookie prefixes don't magically set implied attributes, they trigger client enforcement that attributes are set a certain way. A `__Host-` cookie MUST have the `Secure` attribute at least (the spec already defines a missing path attribute to default to `path=/`). So the httponly-enforcing `__HttpOnly-` prefix can only be used if the Set-Cookie explicitly sets `HttpOnly` because the default is \"not httponly\".\n\nThe prefixes are a backward-compatible name hack to get some opt-in enforcement into the spec. To \"old\" clients or servers these are just cookie names that work like any other cookie. Newer clients will enforce the rules so your cookies will fail if you forget to include the correct set of attributes. If you make newer clients happy, then old clients benefit from your app creating and updating the cookies in the way your web app devs intended. But that backwards compatibility only works if you actually specify the attributes since \"old\" clients won't magically create them based on the prefixes they know nothing about.\n\n",
          "createdAt": "2025-02-27T00:36:54Z",
          "updatedAt": "2025-02-27T01:03:55Z"
        },
        {
          "author": "dveditz",
          "authorAssociation": "NONE",
          "body": "The point being that if we renamed `__HttpOnlyHost-` to `__Session-` it wouldn't save you from having to actually specify httponly. You'd still have to say\n`Set-Cookie: __Session-id=xxxxxxxxxxxxxxx; Secure; HttpOnly; Max-Age=${maxage}`",
          "createdAt": "2025-02-27T01:08:20Z",
          "updatedAt": "2025-02-27T01:08:20Z"
        }
      ]
    },
    {
      "number": 4,
      "id": "I_kwDON-hv0s6r2SJD",
      "title": "__HttpOnly- should reject paths that are not the default \"/\"  (cookie paths are broken)",
      "url": "https://github.com/yoavweiss/httponly_prefix/issues/4",
      "state": "CLOSED",
      "author": "dveditz",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "Both forms of `__HttpOnly-` prefixes should require the default `path=/`, not just the \"Host-only\" form. If we'd been on the ball we should have required that for `__Secure-`, too, but too late for that.\n\nEven the original rfc6265 was warning people from using paths: https://www.rfc-editor.org/rfc/rfc6265.html#section-4.1.2.4 \n> Although seemingly useful for isolating cookies between different paths within a given host, the Path attribute cannot be relied upon for security (see [Section 8](https://www.rfc-editor.org/rfc/rfc6265.html#section-8)).\n\nIf there's some really good reason to avoid this restriction on `__HttpOnly-`  then for the other form it would be better to use the prefix `__HostHttpOnly-` instead of the proposed `__HttpOnlyHost-` because that will better emphasize the similarity of restrictions with `__Host-`",
      "createdAt": "2025-02-27T00:56:59Z",
      "updatedAt": "2025-03-12T04:41:45Z",
      "closedAt": "2025-03-12T04:41:44Z",
      "comments": [
        {
          "author": "yoavweiss",
          "authorAssociation": "OWNER",
          "body": "I believe this is fixed with https://github.com/yoavweiss/httponly_prefix/commit/780d70f18584b47ea9bffc773d1edae6a38c2bf9\n\nLet me know if there's anything I missed",
          "createdAt": "2025-03-10T15:51:13Z",
          "updatedAt": "2025-03-10T15:51:13Z"
        },
        {
          "author": "yoavweiss",
          "authorAssociation": "OWNER",
          "body": "Hmm. Talking to folks, it seems like there are many viable use-cases for HTTPOnly delivery of path-specific cookies. I'll revert and rename as you requested.",
          "createdAt": "2025-03-11T07:11:40Z",
          "updatedAt": "2025-03-11T07:11:40Z"
        },
        {
          "author": "yoavweiss",
          "authorAssociation": "OWNER",
          "body": "https://github.com/yoavweiss/httponly_prefix/commit/8de2a3fd0441e3900a68663a006f37e375a95022",
          "createdAt": "2025-03-11T07:19:51Z",
          "updatedAt": "2025-03-11T07:19:51Z"
        },
        {
          "author": "dveditz",
          "authorAssociation": "NONE",
          "body": "half a win is better than none...",
          "createdAt": "2025-03-12T04:41:44Z",
          "updatedAt": "2025-03-12T04:41:44Z"
        }
      ]
    }
  ],
  "pulls": [
    {
      "number": 1,
      "id": "PR_kwDON-hv0s6MWb9w",
      "title": "tweaks to language",
      "url": "https://github.com/yoavweiss/httponly_prefix/pull/1",
      "state": "MERGED",
      "author": "roryhewitt",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "Changed the language to indicate that the Server can only _infer_ information about a cookie received in a **Cookie** request header based on the name, since the actual implementation of the requirements occurs on the client.",
      "createdAt": "2025-02-24T20:46:12Z",
      "updatedAt": "2025-02-25T09:54:38Z",
      "baseRepository": "yoavweiss/httponly_prefix",
      "baseRefName": "main",
      "baseRefOid": "7a319398ac26d45c59695023c356a5593b192a79",
      "headRepository": "roryhewitt/httponly_prefix",
      "headRefName": "main",
      "headRefOid": "a4be5720d546c33fd04a5a2d9a537747c3c0682f",
      "closedAt": "2025-02-25T09:54:38Z",
      "mergedAt": "2025-02-25T09:54:38Z",
      "mergedBy": "yoavweiss",
      "mergeCommit": {
        "oid": "2a2a9ae03c9a556349ec9302c5115d2b8852b20b"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDON-hv0s6dV7H4",
          "commit": {
            "abbreviatedOid": "a4be572"
          },
          "author": "yoavweiss",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-02-25T07:09:18Z",
          "updatedAt": "2025-02-25T07:09:19Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "I think we want to have both:\r\n* Requirements on when servers should send a Set-Cookie with an __HttpOnly prefix\r\n* What can they make of Cookie request headers that have that prefix.\r\n\r\nI just included the first and your wording only includes the latter :)\r\n\r\nI'll land this and then tweak. Thanks!!",
              "createdAt": "2025-02-25T07:09:18Z",
              "updatedAt": "2025-02-25T07:09:19Z"
            }
          ]
        },
        {
          "id": "PRR_kwDON-hv0s6dV7KZ",
          "commit": {
            "abbreviatedOid": "a4be572"
          },
          "author": "yoavweiss",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-02-25T07:09:24Z",
          "updatedAt": "2025-02-25T07:09:24Z",
          "comments": []
        }
      ]
    },
    {
      "number": 3,
      "id": "PR_kwDON-hv0s6Mi2LE",
      "title": "Tweaks to 'Server Requirements' section",
      "url": "https://github.com/yoavweiss/httponly_prefix/pull/3",
      "state": "MERGED",
      "author": "roryhewitt",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "Updated to clarify that there are two parts to cookie 'processing' on the server:\r\n\r\n1. The creation of the cookie via a `Set-Cookie` response header\r\n2. The processing of an incoming cookie received in a `Cookie` request header\r\n\r\nI have split them and used normative `MUST` in the former (because it's creating the cookie) and non-normative `indicates that` in the latter (because it's processing a cookie which could have been maliciously created by the client).",
      "createdAt": "2025-02-25T23:34:25Z",
      "updatedAt": "2025-03-11T07:27:32Z",
      "baseRepository": "yoavweiss/httponly_prefix",
      "baseRefName": "main",
      "baseRefOid": "8de2a3fd0441e3900a68663a006f37e375a95022",
      "headRepository": "roryhewitt/httponly_prefix",
      "headRefName": "main",
      "headRefOid": "3c0c020eb28ef85c6371b156aac28fb62345f0cc",
      "closedAt": "2025-03-11T07:27:32Z",
      "mergedAt": "2025-03-11T07:27:32Z",
      "mergedBy": "yoavweiss",
      "mergeCommit": {
        "oid": "6412dd2391dd68663acd34b80eedeb27a98eb8e7"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDON-hv0s6fVSe-",
          "commit": {
            "abbreviatedOid": "3c0c020"
          },
          "author": "yoavweiss",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "LGTM",
          "createdAt": "2025-03-11T07:27:27Z",
          "updatedAt": "2025-03-11T07:27:27Z",
          "comments": []
        }
      ]
    }
  ]
}